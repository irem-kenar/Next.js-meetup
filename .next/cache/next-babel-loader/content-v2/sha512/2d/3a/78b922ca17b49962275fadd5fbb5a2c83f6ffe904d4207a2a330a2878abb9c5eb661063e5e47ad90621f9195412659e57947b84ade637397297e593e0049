{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment } from \"react\";\nimport Head from 'next/head';\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/meetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: props.meetupData.title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      })]\n    }), /*#__PURE__*/_jsx(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description // image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\n      // title=\"First Meetup\"\n      // address=\"Some Street 5, Some City\"\n      // description=\"Meetup description\" \n\n    })]\n  });\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://bUG9e78ulpLnX9OP:bUG9e78ulpLnX9OP@cluster0.ojaqa.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    //generating paths dynamically\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // [\n    //     {\n    //         params: {\n    //             meetupId: 'm1'\n    //         }\n    //     },\n    //     {\n    //         params: {\n    //             meetupId: 'm2'\n    //         }\n    //     }\n    // ]\n\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId; // fetch a single meetup dynamically\n\n  const client = await MongoClient.connect('mongodb+srv://bUG9e78ulpLnX9OP:bUG9e78ulpLnX9OP@cluster0.ojaqa.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      //dynamically and need to convert _id back to string not to get an error\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      } //dynamically \n      //meetupData: selectedMeetup\n      //Hardcoded\n      // {\n      //     image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n      //     id: meetupId,\n      //     title: 'First Meetup',\n      //     address: 'Some Street 5, Some City',\n      //     description: 'Meetup description'\n      // },\n\n    }\n  };\n}\nexport default MeetupDetails;","map":null,"metadata":{},"sourceType":"module"}