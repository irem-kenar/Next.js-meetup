{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kenar/Desktop/Next_js/next_js/meetup/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/meetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"Meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/kenar/Desktop/Next_js/next_js/meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,wHADV;AAEI,IAAA,KAAK,EAAC,cAFV;AAGI,IAAA,OAAO,EAAC,0BAHZ;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KARQA,a;;AAgET,eAAeA,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/meetupDetail\";\n\nfunction MeetupDetails() {\n    return (\n        <MeetupDetail\n            image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\n            title=\"First Meetup\"\n            address=\"Some Street 5, Some City\"\n            description=\"Meetup description\" />\n    )\n}\n\nexport async function getStaticPaths() {\n\n    const client = await MongoClient.connect('mongodb+srv://bUG9e78ulpLnX9OP:bUG9e78ulpLnX9OP@cluster0.ojaqa.mongodb.net/meetups?retryWrites=true&w=majority');\n\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n    client.close();\n    return {\n        fallback: false,\n        //generating paths dynamically\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } }))\n        // [\n        //     {\n        //         params: {\n        //             meetupId: 'm1'\n        //         }\n        //     },\n        //     {\n        //         params: {\n        //             meetupId: 'm2'\n        //         }\n        //     }\n        // ]\n    }\n}\n\nexport async function getStaticProps(context) {\n    // fetch data for a single meetup\n    const meetupId = context.params.meetupId;\n    // fetch a single meetup dynamically\n    const client = await MongoClient.connect('mongodb+srv://bUG9e78ulpLnX9OP:bUG9e78ulpLnX9OP@cluster0.ojaqa.mongodb.net/meetups?retryWrites=true&w=majority');\n\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = meetupsCollection.findOne({ _id: meetupId });\n    client.close();\n\n    return {\n        props: {\n            meetupData: {\n                image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n                id: meetupId,\n                title: 'First Meetup',\n                address: 'Some Street 5, Some City',\n                description: 'Meetup description'\n            },\n        },\n    }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}